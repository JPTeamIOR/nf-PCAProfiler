/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FASTQC' {
        ext.args = '--quiet'
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}


//
// Genome preparation options
//

process {

    withName : 'CTAT_MUTATION_PROCESS_BAM' {
        publishDir = [
            path: { "${params.outdir}/ctat_mut" },
            mode: params.publish_dir_mode,
            pattern: 'results'
        ]
    }

    withName: 'DECONTAMINER' {
        publishDir = [
            path: { "${params.outdir}/decontaminer" },
            mode: params.publish_dir_mode,
            pattern: 'results'
        ]
    }

    withName: 'WHIPPET_PROCESS_FASTQ' {
        publishDir = [
            path: { "${params.outdir}/whippet" },
            mode: params.publish_dir_mode,
            pattern: '*{psi,tpm,jnc,map}.gz'
        ]
    }

    withName: 'SORTMERNA' {
            ext.args   = '--num_alignments 1 -v'
            publishDir = [
                [
                    path: { "${params.outdir}/sortmerna" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/sortmerna" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fastq.gz",
                    enabled: false
                ]
            ]
        }



    withName: 'TRIMGALORE' {
            ext.args   = {
                [
                    "--fastqc_args '-t ${task.cpus}' "
                ].join(' ').trim()
            }
            publishDir = [
                [
                    path: { "${params.outdir}/trimgalore/fastqc" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{html,zip}"
                ],
                [
                    path: { "${params.outdir}/trimgalore" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fq.gz",
                    enabled: false
                ],
                [
                    path: { "${params.outdir}/trimgalore" },
                    mode: params.publish_dir_mode,
                    pattern: "*.txt"
                ]
            ]
    }

    withName : 'IRFINDER_PROCESS_BAM' {
        publishDir = [
                path: { "${params.outdir}/irfinder/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }
    withName : 'STARFUSION_PROCESS' {
        publishDir = [
                path: { "${params.outdir}/starfusion/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName : 'IMOKA_EXTRACT_KMERS' {
        publishDir = [
                path: { "${params.outdir}/imoka/" },
                mode: params.publish_dir_mode,
                pattern : "preprocess/*/*.tsv.sorted.bin",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

    withName: 'STAR_ALIGN' {
        ext.args   = [
                '--quantMode TranscriptomeSAM',
                '--twopassMode Basic',
                '--outSAMtype BAM Unsorted',
                '--readFilesCommand zcat',
                '--runRNGseed 0',
                '--outSAMunmapped Within',
                '--outFilterMultimapNmax 20',
                '--outSAMattributes NH HI AS NM MD',
                '--quantTranscriptomeBan Singleend',
                '--outSAMstrandField intronMotif',
                '--outReadsUnmapped Fastx',
                '--chimSegmentMin 12',
                '--chimJunctionOverhangMin 8',
                '--chimOutJunctionFormat 1',
                '--alignSJDBoverhangMin 10',
                '--alignMatesGapMax 100000',
                '--alignIntronMax 100000',
                '--alignSJstitchMismatchNmax 5 -1 5 5 ',
                // '--outSAMattrRGline ID:GRPundef',
                '--chimMultimapScoreRange 3 ',
                '--chimScoreJunctionNonGTAG -4',
                '--chimMultimapNmax 20',
                '--chimNonchimScoreDropMin 10',
                '--peOverlapNbasesMin 12',
                '--peOverlapMMp 0.1',
                '--alignInsertionFlush Right',
                '--alignSplicedMateMapLminOverLmate 0',
                '--alignSplicedMateMapLmin 30'
            ].join(' ').trim()
        publishDir = [
                [
                    path: { "${params.outdir}/star/log" },
                    mode: params.publish_dir_mode,
                    pattern: '*.{out,tab}',
                    enabled : true
                ],
                [
                    path: { "${params.outdir}/star" },
                    mode: params.publish_dir_mode,
                    pattern: '*.Chimeric.out.junction',
                    enabled: true
                ],
                [
                    path: { "${params.outdir}/star" },
                    mode: params.publish_dir_mode,
                    pattern: '*.bam',
                    enabled: params.save_alignments
                ],
                [
                    path: { "${params.outdir}/star/unmapped" },
                    mode: params.publish_dir_mode,
                    pattern: '*.fastq.gz',
                    enabled: true
                ]
            ]
    }

    withName: 'SALMON_QUANT' {
            publishDir = [
                path: { "${params.outdir}/salmon/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
    }

}
